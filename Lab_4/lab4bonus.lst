0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Thu Mar 03 19:50:49 2022
0000              5   ;--------------------------------------------------------
                  5   $name lab4bonus
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _LCDprint
0000             29            public _LCD_4BIT
0000             30            public _WriteCommand
0000             31            public _WriteData
0000             32            public _LCD_byte
0000             33            public _LCD_pulse
0000             34            public _GetADC
0000             35            public _waitms
0000             36            public _wait_us
0000             37            public __c51_external_startup
0000             38            public _SPIWrite
0000             39            public _LCDprint_PARM_3
0000             40            public _LCDprint_PARM_2
0000             41   ;--------------------------------------------------------
0000             42   ; Special Function Registers
0000             43   ;--------------------------------------------------------
0000             44   _ACC            DATA 0xe0
0000             45   _B              DATA 0xf0
0000             46   _PSW            DATA 0xd0
0000             47   _SP             DATA 0x81
0000             48   _SPX            DATA 0xef
0000             49   _DPL            DATA 0x82
0000             50   _DPH            DATA 0x83
0000             51   _DPLB           DATA 0xd4
0000             52   _DPHB           DATA 0xd5
0000             53   _PAGE           DATA 0xf6
0000             54   _AX             DATA 0xe1
0000             55   _BX             DATA 0xf7
0000             56   _DSPR           DATA 0xe2
0000             57   _FIRD           DATA 0xe3
0000             58   _MACL           DATA 0xe4
0000             59   _MACH           DATA 0xe5
0000             60   _PCON           DATA 0x87
0000             61   _AUXR           DATA 0x8e
0000             62   _AUXR1          DATA 0xa2
0000             63   _DPCF           DATA 0xa1
0000             64   _CKRL           DATA 0x97
0000             65   _CKCKON0        DATA 0x8f
0000             66   _CKCKON1        DATA 0xaf
0000             67   _CKSEL          DATA 0x85
0000             68   _CLKREG         DATA 0xae
0000             69   _OSCCON         DATA 0x85
0000             70   _IE             DATA 0xa8
0000             71   _IEN0           DATA 0xa8
0000             72   _IEN1           DATA 0xb1
0000             73   _IPH0           DATA 0xb7
0000             74   _IP             DATA 0xb8
0000             75   _IPL0           DATA 0xb8
0000             76   _IPH1           DATA 0xb3
0000             77   _IPL1           DATA 0xb2
0000             78   _P0             DATA 0x80
0000             79   _P1             DATA 0x90
0000             80   _P2             DATA 0xa0
0000             81   _P3             DATA 0xb0
0000             82   _P4             DATA 0xc0
0000             83   _P0M0           DATA 0xe6
0000             84   _P0M1           DATA 0xe7
0000             85   _P1M0           DATA 0xd6
0000             86   _P1M1           DATA 0xd7
0000             87   _P2M0           DATA 0xce
0000             88   _P2M1           DATA 0xcf
0000             89   _P3M0           DATA 0xc6
0000             90   _P3M1           DATA 0xc7
0000             91   _P4M0           DATA 0xbe
0000             92   _P4M1           DATA 0xbf
0000             93   _SCON           DATA 0x98
0000             94   _SBUF           DATA 0x99
0000             95   _SADEN          DATA 0xb9
0000             96   _SADDR          DATA 0xa9
0000             97   _BDRCON         DATA 0x9b
0000             98   _BRL            DATA 0x9a
0000             99   _TCON           DATA 0x88
0000            100   _TMOD           DATA 0x89
0000            101   _TCONB          DATA 0x91
0000            102   _TL0            DATA 0x8a
0000            103   _TH0            DATA 0x8c
0000            104   _TL1            DATA 0x8b
0000            105   _TH1            DATA 0x8d
0000            106   _RL0            DATA 0xf2
0000            107   _RH0            DATA 0xf4
0000            108   _RL1            DATA 0xf3
0000            109   _RH1            DATA 0xf5
0000            110   _WDTRST         DATA 0xa6
0000            111   _WDTPRG         DATA 0xa7
0000            112   _T2CON          DATA 0xc8
0000            113   _T2MOD          DATA 0xc9
0000            114   _RCAP2H         DATA 0xcb
0000            115   _RCAP2L         DATA 0xca
0000            116   _TH2            DATA 0xcd
0000            117   _TL2            DATA 0xcc
0000            118   _SPCON          DATA 0xc3
0000            119   _SPSTA          DATA 0xc4
0000            120   _SPDAT          DATA 0xc5
0000            121   _SSCON          DATA 0x93
0000            122   _SSCS           DATA 0x94
0000            123   _SSDAT          DATA 0x95
0000            124   _SSADR          DATA 0x96
0000            125   _KBLS           DATA 0x9c
0000            126   _KBE            DATA 0x9d
0000            127   _KBF            DATA 0x9e
0000            128   _KBMOD          DATA 0x9f
0000            129   _BMSEL          DATA 0x92
0000            130   _FCON           DATA 0xd2
0000            131   _EECON          DATA 0xd2
0000            132   _ACSRA          DATA 0xa3
0000            133   _ACSRB          DATA 0xab
0000            134   _AREF           DATA 0xbd
0000            135   _DADC           DATA 0xa4
0000            136   _DADI           DATA 0xa5
0000            137   _DADL           DATA 0xac
0000            138   _DADH           DATA 0xad
0000            139   _CCON           DATA 0xd8
0000            140   _CMOD           DATA 0xd9
0000            141   _CL             DATA 0xe9
0000            142   _CH             DATA 0xf9
0000            143   _CCAPM0         DATA 0xda
0000            144   _CCAPM1         DATA 0xdb
0000            145   _CCAPM2         DATA 0xdc
0000            146   _CCAPM3         DATA 0xdd
0000            147   _CCAPM4         DATA 0xde
0000            148   _CCAP0H         DATA 0xfa
0000            149   _CCAP1H         DATA 0xfb
0000            150   _CCAP2H         DATA 0xfc
0000            151   _CCAP3H         DATA 0xfd
0000            152   _CCAP4H         DATA 0xfe
0000            153   _CCAP0L         DATA 0xea
0000            154   _CCAP1L         DATA 0xeb
0000            155   _CCAP2L         DATA 0xec
0000            156   _CCAP3L         DATA 0xed
0000            157   _CCAP4L         DATA 0xee
0000            158   ;--------------------------------------------------------
0000            159   ; special function bits
0000            160   ;--------------------------------------------------------
0000            161   _ACC_0          BIT 0xe0
0000            162   _ACC_1          BIT 0xe1
0000            163   _ACC_2          BIT 0xe2
0000            164   _ACC_3          BIT 0xe3
0000            165   _ACC_4          BIT 0xe4
0000            166   _ACC_5          BIT 0xe5
0000            167   _ACC_6          BIT 0xe6
0000            168   _ACC_7          BIT 0xe7
0000            169   _B_0            BIT 0xf0
0000            170   _B_1            BIT 0xf1
0000            171   _B_2            BIT 0xf2
0000            172   _B_3            BIT 0xf3
0000            173   _B_4            BIT 0xf4
0000            174   _B_5            BIT 0xf5
0000            175   _B_6            BIT 0xf6
0000            176   _B_7            BIT 0xf7
0000            177   _P              BIT 0xd0
0000            178   _F1             BIT 0xd1
0000            179   _OV             BIT 0xd2
0000            180   _RS0            BIT 0xd3
0000            181   _RS1            BIT 0xd4
0000            182   _F0             BIT 0xd5
0000            183   _AC             BIT 0xd6
0000            184   _CY             BIT 0xd7
0000            185   _EX0            BIT 0xa8
0000            186   _ET0            BIT 0xa9
0000            187   _EX1            BIT 0xaa
0000            188   _ET1            BIT 0xab
0000            189   _ES             BIT 0xac
0000            190   _ET2            BIT 0xad
0000            191   _EC             BIT 0xae
0000            192   _EA             BIT 0xaf
0000            193   _PX0            BIT 0xb8
0000            194   _PT0            BIT 0xb9
0000            195   _PX1            BIT 0xba
0000            196   _PT1            BIT 0xbb
0000            197   _PS             BIT 0xbc
0000            198   _PT2            BIT 0xbd
0000            199   _IP0D           BIT 0xbf
0000            200   _PPCL           BIT 0xbe
0000            201   _PT2L           BIT 0xbd
0000            202   _PLS            BIT 0xbc
0000            203   _PT1L           BIT 0xbb
0000            204   _PX1L           BIT 0xba
0000            205   _PT0L           BIT 0xb9
0000            206   _PX0L           BIT 0xb8
0000            207   _P0_0           BIT 0x80
0000            208   _P0_1           BIT 0x81
0000            209   _P0_2           BIT 0x82
0000            210   _P0_3           BIT 0x83
0000            211   _P0_4           BIT 0x84
0000            212   _P0_5           BIT 0x85
0000            213   _P0_6           BIT 0x86
0000            214   _P0_7           BIT 0x87
0000            215   _P1_0           BIT 0x90
0000            216   _P1_1           BIT 0x91
0000            217   _P1_2           BIT 0x92
0000            218   _P1_3           BIT 0x93
0000            219   _P1_4           BIT 0x94
0000            220   _P1_5           BIT 0x95
0000            221   _P1_6           BIT 0x96
0000            222   _P1_7           BIT 0x97
0000            223   _P2_0           BIT 0xa0
0000            224   _P2_1           BIT 0xa1
0000            225   _P2_2           BIT 0xa2
0000            226   _P2_3           BIT 0xa3
0000            227   _P2_4           BIT 0xa4
0000            228   _P2_5           BIT 0xa5
0000            229   _P2_6           BIT 0xa6
0000            230   _P2_7           BIT 0xa7
0000            231   _P3_0           BIT 0xb0
0000            232   _P3_1           BIT 0xb1
0000            233   _P3_2           BIT 0xb2
0000            234   _P3_3           BIT 0xb3
0000            235   _P3_4           BIT 0xb4
0000            236   _P3_5           BIT 0xb5
0000            237   _P3_6           BIT 0xb6
0000            238   _P3_7           BIT 0xb7
0000            239   _RXD            BIT 0xb0
0000            240   _TXD            BIT 0xb1
0000            241   _INT0           BIT 0xb2
0000            242   _INT1           BIT 0xb3
0000            243   _T0             BIT 0xb4
0000            244   _T1             BIT 0xb5
0000            245   _WR             BIT 0xb6
0000            246   _RD             BIT 0xb7
0000            247   _P4_0           BIT 0xc0
0000            248   _P4_1           BIT 0xc1
0000            249   _P4_2           BIT 0xc2
0000            250   _P4_3           BIT 0xc3
0000            251   _P4_4           BIT 0xc4
0000            252   _P4_5           BIT 0xc5
0000            253   _P4_6           BIT 0xc6
0000            254   _P4_7           BIT 0xc7
0000            255   _RI             BIT 0x98
0000            256   _TI             BIT 0x99
0000            257   _RB8            BIT 0x9a
0000            258   _TB8            BIT 0x9b
0000            259   _REN            BIT 0x9c
0000            260   _SM2            BIT 0x9d
0000            261   _SM1            BIT 0x9e
0000            262   _SM0            BIT 0x9f
0000            263   _IT0            BIT 0x88
0000            264   _IE0            BIT 0x89
0000            265   _IT1            BIT 0x8a
0000            266   _IE1            BIT 0x8b
0000            267   _TR0            BIT 0x8c
0000            268   _TF0            BIT 0x8d
0000            269   _TR1            BIT 0x8e
0000            270   _TF1            BIT 0x8f
0000            271   _CP_RL2         BIT 0xc8
0000            272   _C_T2           BIT 0xc9
0000            273   _TR2            BIT 0xca
0000            274   _EXEN2          BIT 0xcb
0000            275   _TCLK           BIT 0xcc
0000            276   _RCLK           BIT 0xcd
0000            277   _EXF2           BIT 0xce
0000            278   _TF2            BIT 0xcf
0000            279   _CF             BIT 0xdf
0000            280   _CR             BIT 0xde
0000            281   _CCF4           BIT 0xdc
0000            282   _CCF3           BIT 0xdb
0000            283   _CCF2           BIT 0xda
0000            284   _CCF1           BIT 0xd9
0000            285   _CCF0           BIT 0xd8
0000            286   ;--------------------------------------------------------
0000            287   ; overlayable register banks
0000            288   ;--------------------------------------------------------
0000            289            rbank0 segment data overlay
0000            290   ;--------------------------------------------------------
0000            291   ; internal ram data
0000            292   ;--------------------------------------------------------
0000            293            rseg R_DSEG
0000            294   _LCDprint_PARM_2:
0000            295            ds 1
0001            296   _main_temp_1_46:
0001            297            ds 10
000B            298   ;--------------------------------------------------------
000B            299   ; overlayable items in internal ram 
000B            300   ;--------------------------------------------------------
0000            301            rseg    R_OSEG
0000            302   ;--------------------------------------------------------
0000            303   ; indirectly addressable internal ram data
0000            304   ;--------------------------------------------------------
0000            305            rseg R_ISEG
0000            306   ;--------------------------------------------------------
0000            307   ; absolute internal ram data
0000            308   ;--------------------------------------------------------
0000            309            DSEG
0000            310   ;--------------------------------------------------------
0000            311   ; bit data
0000            312   ;--------------------------------------------------------
0000            313            rseg R_BSEG
0000            314   _LCDprint_PARM_3:
0000            315            DBIT    1
0001            316   ;--------------------------------------------------------
0001            317   ; paged external ram data
0001            318   ;--------------------------------------------------------
0000            319            rseg R_PSEG
0000            320   ;--------------------------------------------------------
0000            321   ; external ram data
0000            322   ;--------------------------------------------------------
0000            323            rseg R_XSEG
0000            324   ;--------------------------------------------------------
0000            325   ; absolute external ram data
0000            326   ;--------------------------------------------------------
0000            327            XSEG
0000            328   ;--------------------------------------------------------
0000            329   ; external initialized ram data
0000            330   ;--------------------------------------------------------
0000            331            rseg R_IXSEG
0000            332            rseg R_HOME
0000            333            rseg R_GSINIT
0000            334            rseg R_CSEG
0000            335   ;--------------------------------------------------------
0000            336   ; Reset entry point and interrupt vectors
0000            337   ;--------------------------------------------------------
0000            338            CSEG at 0x0000
0000 020100     339            ljmp    _crt0
0003            340   ;--------------------------------------------------------
0003            341   ; global & static initialisations
0003            342   ;--------------------------------------------------------
0000            343            rseg R_HOME
0000            344            rseg R_GSINIT
0000            345            rseg R_GSINIT
0000            346   ;--------------------------------------------------------
0000            347   ; data variables initialization
0000            348   ;--------------------------------------------------------
0000            349            rseg R_DINIT
0000            350            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            351   ;--------------------------------------------------------
0000            352   ; code
0000            353   ;--------------------------------------------------------
0000            354            rseg R_CSEG
0000            355   ;------------------------------------------------------------
0000            356   ;Allocation info for local variables in function 'SPIWrite'
0000            357   ;------------------------------------------------------------
0000            358   ;out_byte                  Allocated to registers 
0000            359   ;------------------------------------------------------------
0000            360   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:25: unsigned char SPIWrite(unsigned char out_byte)
0000            361   ;        -----------------------------------------
0000            362   ;         function SPIWrite
0000            363   ;        -----------------------------------------
0000            364   _SPIWrite:
0000            365            using   0
0000 8582E0     366            mov     _ACC,dpl
0003            367   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:30: BB_MOSI=ACC_7; BB_SCLK=1; B_7=BB_MISO; BB_SCLK=0;
0003 A2E7       368            mov     c,_ACC_7
0005 92A1       369            mov     _P2_1,c
0007 D2A3       370            setb    _P2_3
0009 A2A2       371            mov     c,_P2_2
000B 92F7       372            mov     _B_7,c
000D C2A3       373            clr     _P2_3
000F            374   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:31: BB_MOSI=ACC_6; BB_SCLK=1; B_6=BB_MISO; BB_SCLK=0;
000F A2E6       375            mov     c,_ACC_6
0011 92A1       376            mov     _P2_1,c
0013 D2A3       377            setb    _P2_3
0015 A2A2       378            mov     c,_P2_2
0017 92F6       379            mov     _B_6,c
0019 C2A3       380            clr     _P2_3
001B            381   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:32: BB_MOSI=ACC_5; BB_SCLK=1; B_5=BB_MISO; BB_SCLK=0;
001B A2E5       382            mov     c,_ACC_5
001D 92A1       383            mov     _P2_1,c
001F D2A3       384            setb    _P2_3
0021 A2A2       385            mov     c,_P2_2
0023 92F5       386            mov     _B_5,c
0025 C2A3       387            clr     _P2_3
0027            388   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:33: BB_MOSI=ACC_4; BB_SCLK=1; B_4=BB_MISO; BB_SCLK=0;
0027 A2E4       389            mov     c,_ACC_4
0029 92A1       390            mov     _P2_1,c
002B D2A3       391            setb    _P2_3
002D A2A2       392            mov     c,_P2_2
002F 92F4       393            mov     _B_4,c
0031 C2A3       394            clr     _P2_3
0033            395   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:34: BB_MOSI=ACC_3; BB_SCLK=1; B_3=BB_MISO; BB_SCLK=0;
0033 A2E3       396            mov     c,_ACC_3
0035 92A1       397            mov     _P2_1,c
0037 D2A3       398            setb    _P2_3
0039 A2A2       399            mov     c,_P2_2
003B 92F3       400            mov     _B_3,c
003D C2A3       401            clr     _P2_3
003F            402   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:35: BB_MOSI=ACC_2; BB_SCLK=1; B_2=BB_MISO; BB_SCLK=0;
003F A2E2       403            mov     c,_ACC_2
0041 92A1       404            mov     _P2_1,c
0043 D2A3       405            setb    _P2_3
0045 A2A2       406            mov     c,_P2_2
0047 92F2       407            mov     _B_2,c
0049 C2A3       408            clr     _P2_3
004B            409   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:36: BB_MOSI=ACC_1; BB_SCLK=1; B_1=BB_MISO; BB_SCLK=0;
004B A2E1       410            mov     c,_ACC_1
004D 92A1       411            mov     _P2_1,c
004F D2A3       412            setb    _P2_3
0051 A2A2       413            mov     c,_P2_2
0053 92F1       414            mov     _B_1,c
0055 C2A3       415            clr     _P2_3
0057            416   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:37: BB_MOSI=ACC_0; BB_SCLK=1; B_0=BB_MISO; BB_SCLK=0;
0057 A2E0       417            mov     c,_ACC_0
0059 92A1       418            mov     _P2_1,c
005B D2A3       419            setb    _P2_3
005D A2A2       420            mov     c,_P2_2
005F 92F0       421            mov     _B_0,c
0061 C2A3       422            clr     _P2_3
0063            423   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:39: return B;
0063 85F082     424            mov     dpl,_B
0066 22         425            ret
0067            426   ;------------------------------------------------------------
0067            427   ;Allocation info for local variables in function '_c51_external_startup'
0067            428   ;------------------------------------------------------------
0067            429   ;------------------------------------------------------------
0067            430   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:42: unsigned char _c51_external_startup(void)
0067            431   ;        -----------------------------------------
0067            432   ;         function _c51_external_startup
0067            433   ;        -----------------------------------------
0067            434   __c51_external_startup:
0067            435   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:44: AUXR=0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
0067 758E11     436            mov     _AUXR,#0x11
006A            437   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:46: P0M0=0x00; P0M1=0x00;    
006A 75E600     438            mov     _P0M0,#0x00
006D 75E700     439            mov     _P0M1,#0x00
0070            440   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:47: P1M0=0x00; P1M1=0x00;    
0070 75D600     441            mov     _P1M0,#0x00
0073 75D700     442            mov     _P1M1,#0x00
0076            443   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:48: P2M0=0x00; P2M1=0x00;    
0076 75CE00     444            mov     _P2M0,#0x00
0079 75CF00     445            mov     _P2M1,#0x00
007C            446   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:49: P3M0=0x00; P3M1=0x00;
007C 75C600     447            mov     _P3M0,#0x00
007F 75C700     448            mov     _P3M1,#0x00
0082            449   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:52: ADC_CE=0;  // Disable SPI access to MCP3008
0082 C2A0       450            clr     _P2_0
0084            451   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:53: BB_SCLK=0; // Resting state of SPI clock is '0'
0084 C2A3       452            clr     _P2_3
0086            453   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:54: BB_MISO=1; // Write '1' to MISO before using as input
0086 D2A2       454            setb    _P2_2
0088            455   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:57: PCON|=0x80;
0088 438780     456            orl     _PCON,#0x80
008B            457   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:58: SCON = 0x52;
008B 759852     458            mov     _SCON,#0x52
008E            459   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:59: BDRCON=0;
008E 759B00     460            mov     _BDRCON,#0x00
0091            461   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:63: BRL=BRG_VAL;
0091 759AF4     462            mov     _BRL,#0xF4
0094            463   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:64: BDRCON=BRR|TBCK|RBCK|SPD;
0094 759B1E     464            mov     _BDRCON,#0x1E
0097            465   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:66: CLKREG=0x00; // TPS=0000B
0097 75AE00     466            mov     _CLKREG,#0x00
009A            467   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:68: return 0;
009A 758200     468            mov     dpl,#0x00
009D 22         469            ret
009E            470   ;------------------------------------------------------------
009E            471   ;Allocation info for local variables in function 'wait_us'
009E            472   ;------------------------------------------------------------
009E            473   ;x                         Allocated to registers r2 
009E            474   ;j                         Allocated to registers r2 r3 
009E            475   ;------------------------------------------------------------
009E            476   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:71: void wait_us (unsigned char x)
009E            477   ;        -----------------------------------------
009E            478   ;         function wait_us
009E            479   ;        -----------------------------------------
009E            480   _wait_us:
009E AA82       481            mov     r2,dpl
00A0            482   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:75: TR0=0; // Stop timer 0
00A0 C28C       483            clr     _TR0
00A2            484   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:76: TMOD&=0xf0; // Clear the configuration bits for timer 0
00A2 5389F0     485            anl     _TMOD,#0xF0
00A5            486   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:77: TMOD|=0x01; // Mode 1: 16-bit timer
00A5 438901     487            orl     _TMOD,#0x01
00A8            488   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:79: if(x>5) x-=5; // Subtract the overhead
00A8 EA         489            mov     a,r2
00A9 24FA       490            add     a,#0xff - 0x05
00AB 5001       491            jnc     L004002?
00AD EA         492            mov     a,r2
00AE 24FB       493            add     a,#0xfb
00B0 FA         494            mov     r2,a
00B1 8001       495            sjmp    L004003?
00B3            496   L004002?:
00B3            497   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:80: else x=1;
00B3 7A01       498            mov     r2,#0x01
00B5            499   L004003?:
00B5            500   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:82: j=-ONE_USEC*x;
00B5 8A00       501            mov     __mullong_PARM_2,r2
00B7 750100     502            mov     (__mullong_PARM_2 + 1),#0x00
00BA 750200     503            mov     (__mullong_PARM_2 + 2),#0x00
00BD 750300     504            mov     (__mullong_PARM_2 + 3),#0x00
00C0 90FFEA     505            mov     dptr,#0xFFEA
00C3 74FF       506            mov     a,#0xFF
00C5 F5F0       507            mov     b,a
00C7 120100     508            lcall   __mullong
00CA AA82       509            mov     r2,dpl
00CC AB83       510            mov     r3,dph
00CE            511   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:83: TF0=0;
00CE C28D       512            clr     _TF0
00D0            513   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:84: TH0=j/0x100;
00D0 8B04       514            mov     ar4,r3
00D2 7D00       515            mov     r5,#0x00
00D4 8C8C       516            mov     _TH0,r4
00D6            517   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:85: TL0=j%0x100;
00D6 7B00       518            mov     r3,#0x00
00D8 8A8A       519            mov     _TL0,r2
00DA            520   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:86: TR0=1; // Start timer 0
00DA D28C       521            setb    _TR0
00DC            522   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:87: while(TF0==0); //Wait for overflow
00DC            523   L004004?:
00DC 308D20     524            jnb     _TF0,L004004?
00DF 22         525            ret
00E0            526   ;------------------------------------------------------------
00E0            527   ;Allocation info for local variables in function 'waitms'
00E0            528   ;------------------------------------------------------------
00E0            529   ;ms                        Allocated to registers r2 r3 
00E0            530   ;j                         Allocated to registers r4 r5 
00E0            531   ;k                         Allocated to registers r6 
00E0            532   ;------------------------------------------------------------
00E0            533   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:90: void waitms (unsigned int ms)
00E0            534   ;        -----------------------------------------
00E0            535   ;         function waitms
00E0            536   ;        -----------------------------------------
00E0            537   _waitms:
00E0 AA82       538            mov     r2,dpl
00E2 AB83       539            mov     r3,dph
00E4            540   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:94: for(j=0; j<ms; j++)
00E4 7C00       541            mov     r4,#0x00
00E6 7D00       542            mov     r5,#0x00
00E8            543   L005005?:
00E8 C3         544            clr     c
00E9 EC         545            mov     a,r4
00EA 9A         546            subb    a,r2
00EB ED         547            mov     a,r5
00EC 9B         548            subb    a,r3
00ED 5001       549            jnc     L005009?
00EF            550   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:95: for (k=0; k<4; k++) wait_us(250);
00EF 7E00       551            mov     r6,#0x00
00F1            552   L005001?:
00F1 BE0420     553            cjne    r6,#0x04,L005018?
00F4            554   L005018?:
00F4 5001       555            jnc     L005007?
00F6 7582FA     556            mov     dpl,#0xFA
00F9 C002       557            push    ar2
00FB C003       558            push    ar3
00FD C004       559            push    ar4
00FF C005       560            push    ar5
0101 C006       561            push    ar6
0103 120100     562            lcall   _wait_us
0106 D006       563            pop     ar6
0108 D005       564            pop     ar5
010A D004       565            pop     ar4
010C D003       566            pop     ar3
010E D002       567            pop     ar2
0110 0E         568            inc     r6
0111 8001       569            sjmp    L005001?
0113            570   L005007?:
0113            571   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:94: for(j=0; j<ms; j++)
0113 0C         572            inc     r4
0114 BC0060     573            cjne    r4,#0x00,L005005?
0117 0D         574            inc     r5
0118 8001       575            sjmp    L005005?
011A            576   L005009?:
011A 22         577            ret
011B            578   ;------------------------------------------------------------
011B            579   ;Allocation info for local variables in function 'GetADC'
011B            580   ;------------------------------------------------------------
011B            581   ;channel                   Allocated to registers r2 
011B            582   ;adc                       Allocated to registers r3 r4 
011B            583   ;spid                      Allocated to registers r2 
011B            584   ;------------------------------------------------------------
011B            585   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:99: unsigned int volatile GetADC(unsigned char channel)
011B            586   ;        -----------------------------------------
011B            587   ;         function GetADC
011B            588   ;        -----------------------------------------
011B            589   _GetADC:
011B AA82       590            mov     r2,dpl
011D            591   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:104: ADC_CE=0; // Activate the MCP3008 ADC.
011D C2A0       592            clr     _P2_0
011F            593   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:106: SPIWrite(0x01);// Send the start bit.
011F 758201     594            mov     dpl,#0x01
0122 C002       595            push    ar2
0124 120100     596            lcall   _SPIWrite
0127 D002       597            pop     ar2
0129            598   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:107: spid=SPIWrite((channel*0x10)|0x80);       //Send single/diff* bit, D2, D1, and D0 bits.
0129 EA         599            mov     a,r2
012A C4         600            swap    a
012B 54F0       601            anl     a,#0xf0
012D FA         602            mov     r2,a
012E 7480       603            mov     a,#0x80
0130 4A         604            orl     a,r2
0131 F582       605            mov     dpl,a
0133 120100     606            lcall   _SPIWrite
0136 AA82       607            mov     r2,dpl
0138            608   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:108: adc=((spid & 0x03)*0x100);// spid has the two most significant bits of the result.
0138 7403       609            mov     a,#0x03
013A 5A         610            anl     a,r2
013B FC         611            mov     r4,a
013C 7B00       612            mov     r3,#0x00
013E            613   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:109: spid=SPIWrite(0x00);// It doesn't matter what we send now.
013E 758200     614            mov     dpl,#0x00
0141 C003       615            push    ar3
0143 C004       616            push    ar4
0145 120100     617            lcall   _SPIWrite
0148 AA82       618            mov     r2,dpl
014A D004       619            pop     ar4
014C D003       620            pop     ar3
014E            621   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:110: adc+=spid;// spid contains the low part of the result. 
014E 7D00       622            mov     r5,#0x00
0150 EA         623            mov     a,r2
0151 2B         624            add     a,r3
0152 FB         625            mov     r3,a
0153 ED         626            mov     a,r5
0154 3C         627            addc    a,r4
0155 FC         628            mov     r4,a
0156            629   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:112: ADC_CE=1; // Deactivate the MCP3008 ADC.
0156 D2A0       630            setb    _P2_0
0158            631   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:114: return adc;
0158 8B82       632            mov     dpl,r3
015A 8C83       633            mov     dph,r4
015C 22         634            ret
015D            635   ;------------------------------------------------------------
015D            636   ;Allocation info for local variables in function 'LCD_pulse'
015D            637   ;------------------------------------------------------------
015D            638   ;------------------------------------------------------------
015D            639   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:116: void LCD_pulse (void)
015D            640   ;        -----------------------------------------
015D            641   ;         function LCD_pulse
015D            642   ;        -----------------------------------------
015D            643   _LCD_pulse:
015D            644   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:118: LCD_E=1;
015D D2B3       645            setb    _P3_3
015F            646   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:119: wait_us(40);
015F 758228     647            mov     dpl,#0x28
0162 120100     648            lcall   _wait_us
0165            649   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:120: LCD_E=0;
0165 C2B3       650            clr     _P3_3
0167 22         651            ret
0168            652   ;------------------------------------------------------------
0168            653   ;Allocation info for local variables in function 'LCD_byte'
0168            654   ;------------------------------------------------------------
0168            655   ;x                         Allocated to registers r2 
0168            656   ;------------------------------------------------------------
0168            657   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:124: void LCD_byte (unsigned char x)
0168            658   ;        -----------------------------------------
0168            659   ;         function LCD_byte
0168            660   ;        -----------------------------------------
0168            661   _LCD_byte:
0168 AA82       662            mov     r2,dpl
016A            663   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:127: ACC=x; //Send high nible
016A 8AE0       664            mov     _ACC,r2
016C            665   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:128: LCD_D7=ACC_7;
016C A2E7       666            mov     c,_ACC_7
016E 92B7       667            mov     _P3_7,c
0170            668   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:129: LCD_D6=ACC_6;
0170 A2E6       669            mov     c,_ACC_6
0172 92B6       670            mov     _P3_6,c
0174            671   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:130: LCD_D5=ACC_5;
0174 A2E5       672            mov     c,_ACC_5
0176 92B5       673            mov     _P3_5,c
0178            674   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:131: LCD_D4=ACC_4;
0178 A2E4       675            mov     c,_ACC_4
017A 92B4       676            mov     _P3_4,c
017C            677   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:132: LCD_pulse();
017C C002       678            push    ar2
017E 120100     679            lcall   _LCD_pulse
0181            680   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:133: wait_us(40);
0181 758228     681            mov     dpl,#0x28
0184 120100     682            lcall   _wait_us
0187 D002       683            pop     ar2
0189            684   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:134: ACC=x; //Send low nible
0189 8AE0       685            mov     _ACC,r2
018B            686   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:135: LCD_D7=ACC_3;
018B A2E3       687            mov     c,_ACC_3
018D 92B7       688            mov     _P3_7,c
018F            689   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:136: LCD_D6=ACC_2;
018F A2E2       690            mov     c,_ACC_2
0191 92B6       691            mov     _P3_6,c
0193            692   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:137: LCD_D5=ACC_1;
0193 A2E1       693            mov     c,_ACC_1
0195 92B5       694            mov     _P3_5,c
0197            695   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:138: LCD_D4=ACC_0;
0197 A2E0       696            mov     c,_ACC_0
0199 92B4       697            mov     _P3_4,c
019B            698   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:139: LCD_pulse();
019B 020100     699            ljmp    _LCD_pulse
019E            700   ;------------------------------------------------------------
019E            701   ;Allocation info for local variables in function 'WriteData'
019E            702   ;------------------------------------------------------------
019E            703   ;x                         Allocated to registers r2 
019E            704   ;------------------------------------------------------------
019E            705   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:142: void WriteData (unsigned char x)
019E            706   ;        -----------------------------------------
019E            707   ;         function WriteData
019E            708   ;        -----------------------------------------
019E            709   _WriteData:
019E AA82       710            mov     r2,dpl
01A0            711   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:144: LCD_RS=1;
01A0 D2B2       712            setb    _P3_2
01A2            713   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:145: LCD_byte(x);
01A2 8A82       714            mov     dpl,r2
01A4 120100     715            lcall   _LCD_byte
01A7            716   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:146: waitms(2);
01A7 900002     717            mov     dptr,#0x0002
01AA 020100     718            ljmp    _waitms
01AD            719   ;------------------------------------------------------------
01AD            720   ;Allocation info for local variables in function 'WriteCommand'
01AD            721   ;------------------------------------------------------------
01AD            722   ;x                         Allocated to registers r2 
01AD            723   ;------------------------------------------------------------
01AD            724   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:149: void WriteCommand (unsigned char x)
01AD            725   ;        -----------------------------------------
01AD            726   ;         function WriteCommand
01AD            727   ;        -----------------------------------------
01AD            728   _WriteCommand:
01AD AA82       729            mov     r2,dpl
01AF            730   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:151: LCD_RS=0;
01AF C2B2       731            clr     _P3_2
01B1            732   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:152: LCD_byte(x);
01B1 8A82       733            mov     dpl,r2
01B3 120100     734            lcall   _LCD_byte
01B6            735   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:153: waitms(5);
01B6 900005     736            mov     dptr,#0x0005
01B9 020100     737            ljmp    _waitms
01BC            738   ;------------------------------------------------------------
01BC            739   ;Allocation info for local variables in function 'LCD_4BIT'
01BC            740   ;------------------------------------------------------------
01BC            741   ;------------------------------------------------------------
01BC            742   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:156: void LCD_4BIT (void)
01BC            743   ;        -----------------------------------------
01BC            744   ;         function LCD_4BIT
01BC            745   ;        -----------------------------------------
01BC            746   _LCD_4BIT:
01BC            747   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:158: LCD_E=0; // Resting state of LCD's enable is zero
01BC C2B3       748            clr     _P3_3
01BE            749   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:160: waitms(20);
01BE 900014     750            mov     dptr,#0x0014
01C1 120100     751            lcall   _waitms
01C4            752   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:162: WriteCommand(0x33);
01C4 758233     753            mov     dpl,#0x33
01C7 120100     754            lcall   _WriteCommand
01CA            755   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:163: WriteCommand(0x33);
01CA 758233     756            mov     dpl,#0x33
01CD 120100     757            lcall   _WriteCommand
01D0            758   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:164: WriteCommand(0x32); // Change to 4-bit mode
01D0 758232     759            mov     dpl,#0x32
01D3 120100     760            lcall   _WriteCommand
01D6            761   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:167: WriteCommand(0x28);
01D6 758228     762            mov     dpl,#0x28
01D9 120100     763            lcall   _WriteCommand
01DC            764   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:168: WriteCommand(0x0c);
01DC 75820C     765            mov     dpl,#0x0C
01DF 120100     766            lcall   _WriteCommand
01E2            767   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:169: WriteCommand(0x01); // Clear screen command (takes some time)
01E2 758201     768            mov     dpl,#0x01
01E5 120100     769            lcall   _WriteCommand
01E8            770   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:170: waitms(20); // Wait for clear screen command to finsih.
01E8 900014     771            mov     dptr,#0x0014
01EB 020100     772            ljmp    _waitms
01EE            773   ;------------------------------------------------------------
01EE            774   ;Allocation info for local variables in function 'LCDprint'
01EE            775   ;------------------------------------------------------------
01EE            776   ;line                      Allocated with name '_LCDprint_PARM_2'
01EE            777   ;string                    Allocated to registers r2 r3 r4 
01EE            778   ;j                         Allocated to registers r5 r6 
01EE            779   ;------------------------------------------------------------
01EE            780   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:173: void LCDprint(char * string, unsigned char line, bit clear)
01EE            781   ;        -----------------------------------------
01EE            782   ;         function LCDprint
01EE            783   ;        -----------------------------------------
01EE            784   _LCDprint:
01EE AA82       785            mov     r2,dpl
01F0 AB83       786            mov     r3,dph
01F2 ACF0       787            mov     r4,b
01F4            788   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:177: WriteCommand(line==2?0xc0:0x80);
01F4 7402       789            mov     a,#0x02
01F6 B590A0     790            cjne    a,_LCDprint_PARM_2,L012013?
01F9 7DC0       791            mov     r5,#0xC0
01FB 8001       792            sjmp    L012014?
01FD            793   L012013?:
01FD 7D80       794            mov     r5,#0x80
01FF            795   L012014?:
01FF 8D82       796            mov     dpl,r5
0201 C002       797            push    ar2
0203 C003       798            push    ar3
0205 C004       799            push    ar4
0207 120100     800            lcall   _WriteCommand
020A            801   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:178: waitms(5);
020A 900005     802            mov     dptr,#0x0005
020D 120100     803            lcall   _waitms
0210 D004       804            pop     ar4
0212 D003       805            pop     ar3
0214 D002       806            pop     ar2
0216            807   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:179: for(j=0; string[j]!=0; j++)       WriteData(string[j]);// Write the message
0216 7D00       808            mov     r5,#0x00
0218 7E00       809            mov     r6,#0x00
021A            810   L012003?:
021A ED         811            mov     a,r5
021B 2A         812            add     a,r2
021C FF         813            mov     r7,a
021D EE         814            mov     a,r6
021E 3B         815            addc    a,r3
021F F8         816            mov     r0,a
0220 8C01       817            mov     ar1,r4
0222 8F82       818            mov     dpl,r7
0224 8883       819            mov     dph,r0
0226 89F0       820            mov     b,r1
0228 120100     821            lcall   __gptrget
022B FF         822            mov     r7,a
022C 6001       823            jz      L012006?
022E 8F82       824            mov     dpl,r7
0230 C002       825            push    ar2
0232 C003       826            push    ar3
0234 C004       827            push    ar4
0236 C005       828            push    ar5
0238 C006       829            push    ar6
023A 120100     830            lcall   _WriteData
023D D006       831            pop     ar6
023F D005       832            pop     ar5
0241 D004       833            pop     ar4
0243 D003       834            pop     ar3
0245 D002       835            pop     ar2
0247 0D         836            inc     r5
0248 BD0020     837            cjne    r5,#0x00,L012003?
024B 0E         838            inc     r6
024C 8001       839            sjmp    L012003?
024E            840   L012006?:
024E            841   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:180: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
024E 3040E0     842            jnb     _LCDprint_PARM_3,L012011?
0251 8D02       843            mov     ar2,r5
0253 8E03       844            mov     ar3,r6
0255            845   L012007?:
0255 C3         846            clr     c
0256 EA         847            mov     a,r2
0257 9410       848            subb    a,#0x10
0259 EB         849            mov     a,r3
025A 6480       850            xrl     a,#0x80
025C 9480       851            subb    a,#0x80
025E 5001       852            jnc     L012011?
0260 758220     853            mov     dpl,#0x20
0263 C002       854            push    ar2
0265 C003       855            push    ar3
0267 120100     856            lcall   _WriteData
026A D003       857            pop     ar3
026C D002       858            pop     ar2
026E 0A         859            inc     r2
026F BA0020     860            cjne    r2,#0x00,L012007?
0272 0B         861            inc     r3
0273 8001       862            sjmp    L012007?
0275            863   L012011?:
0275 22         864            ret
0276            865   ;------------------------------------------------------------
0276            866   ;Allocation info for local variables in function 'main'
0276            867   ;------------------------------------------------------------
0276            868   ;y                         Allocated to registers r2 r3 r4 r5 
0276            869   ;temperature               Allocated to registers r2 r3 r4 r5 
0276            870   ;temp                      Allocated with name '_main_temp_1_46'
0276            871   ;------------------------------------------------------------
0276            872   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:186: void main (void)
0276            873   ;        -----------------------------------------
0276            874   ;         function main
0276            875   ;        -----------------------------------------
0276            876   _main:
0276            877   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:191: LCD_4BIT();
0276 120100     878            lcall   _LCD_4BIT
0279            879   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:193: waitms(500);
0279 9001F4     880            mov     dptr,#0x01F4
027C 120100     881            lcall   _waitms
027F            882   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:198: while(1)
027F            883   L013002?:
027F            884   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:200: waitms(100);      //writes every 100ms    
027F 900064     885            mov     dptr,#0x0064
0282 120100     886            lcall   _waitms
0285            887   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:201: y=(GetADC(0)*VREF)/1023.0; // Convert the 10-bit integer from the ADC to voltage
0285 758200     888            mov     dpl,#0x00
0288 120100     889            lcall   _GetADC
028B 120100     890            lcall   ___uint2fs
028E AA82       891            mov     r2,dpl
0290 AB83       892            mov     r3,dph
0292 ACF0       893            mov     r4,b
0294 FD         894            mov     r5,a
0295 C002       895            push    ar2
0297 C003       896            push    ar3
0299 C004       897            push    ar4
029B C005       898            push    ar5
029D 90126F     899            mov     dptr,#0x126F
02A0 75F083     900            mov     b,#0x83
02A3 7440       901            mov     a,#0x40
02A5 120100     902            lcall   ___fsmul
02A8 AA82       903            mov     r2,dpl
02AA AB83       904            mov     r3,dph
02AC ACF0       905            mov     r4,b
02AE FD         906            mov     r5,a
02AF E581       907            mov     a,sp
02B1 24FC       908            add     a,#0xfc
02B3 F581       909            mov     sp,a
02B5 E4         910            clr     a
02B6 C0E0       911            push    acc
02B8 74C0       912            mov     a,#0xC0
02BA C0E0       913            push    acc
02BC 747F       914            mov     a,#0x7F
02BE C0E0       915            push    acc
02C0 7444       916            mov     a,#0x44
02C2 C0E0       917            push    acc
02C4 8A82       918            mov     dpl,r2
02C6 8B83       919            mov     dph,r3
02C8 8CF0       920            mov     b,r4
02CA ED         921            mov     a,r5
02CB 120100     922            lcall   ___fsdiv
02CE AA82       923            mov     r2,dpl
02D0 AB83       924            mov     r3,dph
02D2 ACF0       925            mov     r4,b
02D4 FD         926            mov     r5,a
02D5 E581       927            mov     a,sp
02D7 24FC       928            add     a,#0xfc
02D9 F581       929            mov     sp,a
02DB            930   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:202: temperature = 100*(y-2.73); // should now have the value of the temperature (using the LM355 transfer function)
02DB 7452       931            mov     a,#0x52
02DD C0E0       932            push    acc
02DF 74B8       933            mov     a,#0xB8
02E1 C0E0       934            push    acc
02E3 742E       935            mov     a,#0x2E
02E5 C0E0       936            push    acc
02E7 7440       937            mov     a,#0x40
02E9 C0E0       938            push    acc
02EB 8A82       939            mov     dpl,r2
02ED 8B83       940            mov     dph,r3
02EF 8CF0       941            mov     b,r4
02F1 ED         942            mov     a,r5
02F2 120100     943            lcall   ___fssub
02F5 AA82       944            mov     r2,dpl
02F7 AB83       945            mov     r3,dph
02F9 ACF0       946            mov     r4,b
02FB FD         947            mov     r5,a
02FC E581       948            mov     a,sp
02FE 24FC       949            add     a,#0xfc
0300 F581       950            mov     sp,a
0302 C002       951            push    ar2
0304 C003       952            push    ar3
0306 C004       953            push    ar4
0308 C005       954            push    ar5
030A 900000     955            mov     dptr,#0x0000
030D 75F0C8     956            mov     b,#0xC8
0310 7442       957            mov     a,#0x42
0312 120100     958            lcall   ___fsmul
0315 AA82       959            mov     r2,dpl
0317 AB83       960            mov     r3,dph
0319 ACF0       961            mov     r4,b
031B FD         962            mov     r5,a
031C E581       963            mov     a,sp
031E 24FC       964            add     a,#0xfc
0320 F581       965            mov     sp,a
0322            966   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:203: printf("%5.3f\n",temperature);// now it outputs the value of the temperature in Celsius 
0322 C002       967            push    ar2
0324 C003       968            push    ar3
0326 C004       969            push    ar4
0328 C005       970            push    ar5
032A C002       971            push    ar2
032C C003       972            push    ar3
032E C004       973            push    ar4
0330 C005       974            push    ar5
0332 7420       975            mov     a,#__str_0
0334 C0E0       976            push    acc
0336 7486       977            mov     a,#(__str_0 >> 8)
0338 C0E0       978            push    acc
033A 7480       979            mov     a,#0x80
033C C0E0       980            push    acc
033E 120100     981            lcall   _printf
0341 E581       982            mov     a,sp
0343 24F9       983            add     a,#0xf9
0345 F581       984            mov     sp,a
0347            985   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:204: sprintf(temp,"%f",temperature); 
0347 74A0       986            mov     a,#__str_1
0349 C0E0       987            push    acc
034B 7486       988            mov     a,#(__str_1 >> 8)
034D C0E0       989            push    acc
034F 7480       990            mov     a,#0x80
0351 C0E0       991            push    acc
0353 74D0       992            mov     a,#_main_temp_1_46
0355 C0E0       993            push    acc
0357 747E       994            mov     a,#(_main_temp_1_46 >> 8)
0359 C0E0       995            push    acc
035B 7440       996            mov     a,#0x40
035D C0E0       997            push    acc
035F 120100     998            lcall   _sprintf
0362 E581       999            mov     a,sp
0364 24F6      1000            add     a,#0xf6
0366 F581      1001            mov     sp,a
0368           1002   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:205: LCDprint("Temp(Celsius):",1,1);
0368 759001    1003            mov     _LCDprint_PARM_2,#0x01
036B D240      1004            setb    _LCDprint_PARM_3
036D 908720    1005            mov     dptr,#__str_2
0370 75F080    1006            mov     b,#0x80
0373 120100    1007            lcall   _LCDprint
0376           1008   ;        C:\Users\mtale\Desktop\ELEC291\Lab_4\lab4bonus.c:206: LCDprint(temp,2,1);
0376 759002    1009            mov     _LCDprint_PARM_2,#0x02
0379 D240      1010            setb    _LCDprint_PARM_3
037B 907ED0    1011            mov     dptr,#_main_temp_1_46
037E 75F040    1012            mov     b,#0x40
0381 120100    1013            lcall   _LCDprint
0384 020100    1014            ljmp    L013002?
0387           1015            rseg R_CSEG
0387           1016   
0000           1017            rseg R_XINIT
0000           1018   
0000           1019            rseg R_CONST
0000           1020   __str_0:
0000 25352E33  1021            db '%5.3f'
     66
0005 0A        1022            db 0x0A
0006 00        1023            db 0x00
0007           1024   __str_1:
0007 2566      1025            db '%f'
0009 00        1026            db 0x00
000A           1027   __str_2:
000A 54656D70  1028            db 'Temp(Celsius):'
     2843656C
     73697573
     293A
0018 00        1029            db 0x00
0019           1030   
0003           1031            CSEG
0003           1032   
0003           1033   end
